#include <iostream>
#include <WS2tcpip.h>
#include <string>
using namespace std;

#pragma comment(lib, "ws2_32.lib")

void main()
{
	
    string ipAddress = "127.0.0.1";
    int port = 85;

	//initialize winsock
	WSADATA data;

	WORD version = MAKEWORD(2, 3);

	int result = WSAStartup(version, &data);

	if (result != 0) {
		//explain cerr
		cerr << "You Done Fucked Up";
		return;
	}
	//create socket

	SOCKET caller = socket(AF_INET, SOCK_STREAM, 0);
	if (caller == INVALID_SOCKET) {
		cerr << "You Done Fucked Up. Error #" <<WSAGetLastError()<<endl;
		WSACleanup();
		return;

	}
	//create hint struct
	sockaddr_in hint;
	hint.sin_family = AF_INET;
	hint.sin_port = htons(port);
	inet_pton(AF_INET, ipAddress.c_str(), &hint.sin_addr); //??

	//connect to server
	int connection = connect(caller, (sockaddr*)&hint, sizeof(hint));
	if (connection == SOCKET_ERROR) {

		cerr << "You Done Fucked Up. Error #" << WSAGetLastError() << endl;
		closesocket(caller);
		WSACleanup();
		return;

	}

	char message[4096];
	string userInput;

	do {
		cout << "> ";
		getline(cin, userInput);
		if (userInput.size() > 0) {
			int sendResult = send(caller, userInput.c_str(), userInput.size() + 1, 0);
			if (sendResult != SOCKET_ERROR) {
				ZeroMemory(message, 4096);
				int recieved = recv(caller, message, 4096, 0);
				if(recieved >0){ 
					cout << "SERVER SAYS: " << string(message,0,recieved) << endl;
				}
			}
		}

	} while (userInput.size() > 0);

	//close
	closesocket(caller);
	WSACleanup();


}

